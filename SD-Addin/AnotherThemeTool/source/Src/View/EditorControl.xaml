<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:widgets="http://icsharpcode.net/sharpdevelop/widgets"
    xmlns:sdp="clr-namespace:ICSharpCode.SharpDevelop.Project;assembly=ICSharpCode.SharpDevelop"
    xmlns:mui="http://firstfloorsoftware.com/ModernUI"
    xmlns:local="clr-namespace:ThemeTool.Logic"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" x:Class="ThemeTool.View.EditorControl"
    d:DesignWidth="579" d:DesignHeight="306">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.Light.xaml"/>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>
    <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0"/>
    <Grid Grid.Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <Grid Grid.Row="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="3" />
          <ColumnDefinition />
          <ColumnDefinition Width="3" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal">
          <Button
						Content="Generate"
						Click="Event_DoExecute3"
						ToolTip="Generate text and copy to clipboard."
					/>
          <Separator Width="3" Background="Transparent" />
          <CheckBox x:Name="ckIncludeLinks" Content="Links" />
          <!--
					<Separator Width="3" Background="Transparent" />
					<CheckBox Name="ckIncludeCompile" Content="Compile" />
					<Separator Width="3" Background="Transparent" />
					<CheckBox Name="ckIncludeEmbeddedResource" Content="EmbeddedResource" />
					<Separator Width="3" Background="Transparent" />
					<CheckBox Name="ckIncludeNone" Content="None" />
					<Separator Width="3" Background="Transparent" />
					<CheckBox Name="ckIncludeResource" Content="Resource" />
					<Separator Width="3" Background="Transparent" />
-->
        </StackPanel>
        <ComboBox x:Name="cbProjectF" Grid.Column="2"
					ToolTip="From"
					ItemsSource="{Binding Projects, Source={x:Static sdp:ProjectService.OpenSolution}}" DisplayMemberPath="Name" />
        <ComboBox x:Name="cbProjectT" Grid.Column="4"
					ToolTip="To"
					ItemsSource="{Binding Projects, Source={x:Static sdp:ProjectService.OpenSolution}}" DisplayMemberPath="Name" />
      </Grid>
    </Grid>
    <Grid Grid.Row="2">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="100" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <Label Grid.Row="0" Content="Include-Path" HorizontalAlignment="Right" VerticalAlignment="Center" />
      <TextBox x:Name="tbIncludeKey" Grid.Column="1" Text="Include" />
      <Label Grid.Row="1" Content="Base-Path" HorizontalAlignment="Right" VerticalAlignment="Center" />
      <TextBox x:Name="tbRelativePath" Grid.Row="1" Grid.Column="1" />
    </Grid>
    <avalon:TextEditor x:Name="editor" Grid.Row="3" SyntaxHighlighting="XML"  ShowLineNumbers="True" FontFamily="Consolas">
      <avalon:TextEditor.Resources>
        <ResourceDictionary>
          <!--<ResourceDictionary.MergedDictionaries>
						<ResourceDictionary Source="/VisualEditor;component/theme/msdn-scrollbar.xaml" />
					</ResourceDictionary.MergedDictionaries>-->
          <Style TargetType="{x:Type avalon:TextEditor}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalon:TextEditor}">
                  <!--MouseWheelZoom="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Options.MouseWheelZoom}"-->
                  <widgets:ZoomScrollViewer Focusable="False" x:Name="PART_ScrollViewer" MouseWheelZoom="True" CanContentScroll="True" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" Content="{Binding TextArea, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Top" HorizontalContentAlignment="Left" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    TextOptions.TextFormattingMode="{Binding CurrentZoom, Converter={x:Static local:ZoomLevelToTextFormattingModeConverter.Instance}, ElementName=PART_ScrollViewer}"/>
                  <ControlTemplate.Triggers>
                    <Trigger Property="WordWrap" Value="True">
                      <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ResourceDictionary>
      </avalon:TextEditor.Resources>
      <avalon:TextEditor.ContextMenu>
        <ContextMenu>
          <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll" />
          <!--					<MenuItem Header="Select None" Command="{x:Static EditingCommands.se}" />-->
          <Separator />
          <MenuItem Header="Cut" Command="ApplicationCommands.Cut" />
          <MenuItem Header="Copy" Command="ApplicationCommands.Copy" />
          <MenuItem Header="Paste" Command="ApplicationCommands.Paste" />
          <MenuItem Header="Delete" Command="ApplicationCommands.Delete" />
          <MenuItem Header="Syntax" ItemsSource="{Binding HighlightingDefinitions, Source={x:Static avalon:HighlightingManager.Instance}}">
            <MenuItem.Resources>
              <Style TargetType="{x:Type MenuItem}">
                <Setter Property="ItemContainerStyle">
                  <Setter.Value>
                    <Style TargetType="{x:Type MenuItem}">
                      <EventSetter Event="MenuItem.Click" Handler="EditorSyntaxMenuItemClicked" />
                    </Style>
                  </Setter.Value>
                </Setter>
              </Style>
            </MenuItem.Resources>
          </MenuItem>
        </ContextMenu>
      </avalon:TextEditor.ContextMenu>
    </avalon:TextEditor>
  </Grid>
</UserControl>